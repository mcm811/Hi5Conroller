//noinspection GradleCompatible
apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'
//apply plugin: 'kotlin-android'

android {
	signingConfigs {
		config {
			storeFile file('/Users/changmin/Projects/Key/McmAndroidKey.keystore')
			keyAlias 'McmAndroidKey'
			keyPassword 'iii'
			storePassword 'iii'
		}
	}
	compileSdkVersion 25
	buildToolsVersion '26.0.0 rc1'
	defaultConfig {
		applicationId "com.changyoung.hi5controller"
		minSdkVersion 21
		targetSdkVersion 25
		versionCode 28
		versionName '1.1.8'
	}
	buildTypes {
		release {
			minifyEnabled true
			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.config
		}
		debug {
			applicationIdSuffix '.debug'
			minifyEnabled false
			useProguard false
		}
/*
		beta {
			//debuggable build which will automatically ribbonized.
			debuggable true
			applicationIdSuffix '.beta'
			minifyEnabled true
			useProguard true
			versionNameSuffix 'b'
		}
		canary {
			//non-debuggable build which will no automatically ribbonized.
			//But, we force one of its flavors. See `ribbonizer` for how-to
			debuggable false
			applicationIdSuffix '.canary'
			minifyEnabled true
			useProguard true
			versionNameSuffix 'c'
		}
*/
	}
	compileOptions {
		encoding 'UTF-8'
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	productFlavors {
		local {
			minSdkVersion 21
			applicationId 'com.changyoung.hi5controller'
			targetSdkVersion 25
			versionCode 28
			versionName '1.1.8'
			versionNameSuffix '.alpha'
		}
		staging {
			minSdkVersion 21
			applicationId 'com.changyoung.hi5controller'
			targetSdkVersion 25
			versionCode 32
			versionName '1.1.12'
			versionNameSuffix '.beta'
		}
		production {
			minSdkVersion 21
			applicationId 'com.changyoung.hi5controller'
			targetSdkVersion 25
			versionCode 28
			versionName '1.1.8'
			versionNameSuffix '.release'
		}
	}
	lintOptions {
		checkReleaseBuilds false
		abortOnError false
	}
	dexOptions {
		javaMaxHeapSize "4g"
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	testCompile 'junit:junit:4.12'
	compile 'com.intellij:annotations:12.0'
	compile 'com.google.android.gms:play-services-ads:10.2.1'
	//noinspection GradleCompatible
	compile 'com.android.support:support-v4:26.0.0-alpha1'
	//noinspection GradleCompatible
	compile 'com.android.support:support-v13:26.0.0-alpha1'
	compile 'com.android.support:support-annotations:26.0.0-alpha1'
	//noinspection GradleCompatible
	compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
	//noinspection GradleCompatible
	compile 'com.android.support:recyclerview-v7:26.0.0-alpha1'
	//noinspection GradleCompatible
	compile 'com.android.support:cardview-v7:26.0.0-alpha1'
	//noinspection GradleCompatible
	compile 'com.android.support:design:26.0.0-alpha1'
	compile 'com.android.support.constraint:constraint-layout:1.0.2'
	//	compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

repositories {
	mavenCentral()
}

ribbonizer {
	// "manifest application[android:icon]" is automatically added to the list
	iconNames "@drawable/ic_notification", "@drawable/widget_preview"

	builder { variant, iconFile ->
		// change ribbon colors by product flavors
		if (variant.flavorName == "local") {
			return grayRibbonFilter(variant, iconFile)
		} else if (variant.flavorName == "staging") {
			return yellowRibbonFilter(variant, iconFile)
		} else {
			return greenRibbonFilter(variant, iconFile)
		}
	}

	//Although `canary` build-type is marked as `non-debuggable`
	//we can still force specific variants to be ribbonized:
	forcedVariantsNames "localCanary"
}
